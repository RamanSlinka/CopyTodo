[{"H:\\CopyTodo\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"1","H:\\CopyTodo\\src\\app\\App.tsx":"2","H:\\CopyTodo\\src\\app\\app-reducer.ts":"3","H:\\CopyTodo\\src\\index.tsx":"4","H:\\CopyTodo\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"5","H:\\CopyTodo\\src\\utils\\error-utils.ts":"6","H:\\CopyTodo\\src\\components\\EditableSpan\\EditableSpan.tsx":"7","H:\\CopyTodo\\src\\features\\Login\\auth-reducer.ts":"8","H:\\CopyTodo\\src\\api\\todolists-api.ts":"9","H:\\CopyTodo\\src\\features\\Login\\Login.tsx":"10"},{"size":4193,"mtime":1596711650000,"results":"11","hashOfConfig":"12"},{"size":2722,"mtime":1626978028330,"results":"13","hashOfConfig":"12"},{"size":2189,"mtime":1626977455633,"results":"14","hashOfConfig":"12"},{"size":748,"mtime":1626889386265,"results":"15","hashOfConfig":"12"},{"size":1773,"mtime":1596291938000,"results":"16","hashOfConfig":"12"},{"size":811,"mtime":1596715730000,"results":"17","hashOfConfig":"12"},{"size":952,"mtime":1594151124000,"results":"18","hashOfConfig":"12"},{"size":1943,"mtime":1626977854138,"results":"19","hashOfConfig":"12"},{"size":3185,"mtime":1626978000913,"results":"20","hashOfConfig":"12"},{"size":4436,"mtime":1626978997844,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"fb7ki6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\CopyTodo\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["45","46","47","48","49","50"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","H:\\CopyTodo\\src\\app\\App.tsx",["51"],"H:\\CopyTodo\\src\\app\\app-reducer.ts",[],"H:\\CopyTodo\\src\\index.tsx",[],["52","53"],"H:\\CopyTodo\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["54","55","56"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","H:\\CopyTodo\\src\\utils\\error-utils.ts",[],"H:\\CopyTodo\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"H:\\CopyTodo\\src\\features\\Login\\auth-reducer.ts",[],"H:\\CopyTodo\\src\\api\\todolists-api.ts",[],"H:\\CopyTodo\\src\\features\\Login\\Login.tsx",["57"],{"ruleId":"58","severity":1,"message":"59","line":35,"column":8,"nodeType":"60","endLine":35,"endColumn":10,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":39,"column":8,"nodeType":"60","endLine":39,"endColumn":42,"suggestions":"63"},{"ruleId":"58","severity":1,"message":"62","line":46,"column":8,"nodeType":"60","endLine":46,"endColumn":54,"suggestions":"64"},{"ruleId":"58","severity":1,"message":"62","line":48,"column":95,"nodeType":"60","endLine":48,"endColumn":134,"suggestions":"65"},{"ruleId":"58","severity":1,"message":"62","line":49,"column":101,"nodeType":"60","endLine":49,"endColumn":140,"suggestions":"66"},{"ruleId":"58","severity":1,"message":"62","line":50,"column":107,"nodeType":"60","endLine":50,"endColumn":146,"suggestions":"67"},{"ruleId":"58","severity":1,"message":"68","line":29,"column":8,"nodeType":"60","endLine":29,"endColumn":10,"suggestions":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"58","severity":1,"message":"62","line":15,"column":97,"nodeType":"60","endLine":15,"endColumn":130,"suggestions":"74"},{"ruleId":"58","severity":1,"message":"62","line":20,"column":8,"nodeType":"60","endLine":20,"endColumn":41,"suggestions":"75"},{"ruleId":"58","severity":1,"message":"62","line":24,"column":8,"nodeType":"60","endLine":24,"endColumn":41,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":62,"column":28,"nodeType":"79","endLine":62,"endColumn":45},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.","ArrayExpression",["80"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["81"],["82"],["83"],["84"],["85"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["86"],"no-native-reassign",["87"],"no-negated-in-lhs",["88"],["89"],["90"],["91"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"94","fix":"96"},{"desc":"94","fix":"97"},{"desc":"94","fix":"98"},{"desc":"94","fix":"99"},{"desc":"100","fix":"101"},"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"102"},{"desc":"94","fix":"103"},{"desc":"94","fix":"104"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"105","text":"106"},"Update the dependencies array to be: [props]",{"range":"107","text":"108"},{"range":"109","text":"108"},{"range":"110","text":"108"},{"range":"111","text":"108"},{"range":"112","text":"108"},"Update the dependencies array to be: [dispatch]",{"range":"113","text":"114"},{"range":"115","text":"108"},{"range":"116","text":"108"},{"range":"117","text":"108"},[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320],[1243,1245],"[dispatch]",[765,798],[1071,1104],[1261,1294]]