[{"H:\\CopyTodo\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"1","H:\\CopyTodo\\src\\app\\App.tsx":"2","H:\\CopyTodo\\src\\app\\app-reducer.ts":"3","H:\\CopyTodo\\src\\index.tsx":"4","H:\\CopyTodo\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"5","H:\\CopyTodo\\src\\utils\\error-utils.ts":"6","H:\\CopyTodo\\src\\components\\EditableSpan\\EditableSpan.tsx":"7","H:\\CopyTodo\\src\\features\\Login\\auth-reducer.ts":"8","H:\\CopyTodo\\src\\api\\todolists-api.ts":"9","H:\\CopyTodo\\src\\features\\Login\\Login.tsx":"10","H:\\CopyTodo\\src\\features\\TodolistsList\\tasks-reducer.ts":"11","H:\\CopyTodo\\src\\components\\AddItemForm\\AddItemForm.tsx":"12","H:\\CopyTodo\\src\\features\\TodolistsList\\TodolistsList.tsx":"13","H:\\CopyTodo\\src\\features\\TodolistsList\\todolists-reducer.ts":"14"},{"size":4193,"mtime":1596711650000,"results":"15","hashOfConfig":"16"},{"size":2722,"mtime":1626978028330,"results":"17","hashOfConfig":"16"},{"size":2175,"mtime":1628191443022,"results":"18","hashOfConfig":"16"},{"size":827,"mtime":1627648352080,"results":"19","hashOfConfig":"16"},{"size":1773,"mtime":1596291938000,"results":"20","hashOfConfig":"16"},{"size":899,"mtime":1628193782183,"results":"21","hashOfConfig":"16"},{"size":952,"mtime":1594151124000,"results":"22","hashOfConfig":"16"},{"size":1943,"mtime":1628195250555,"results":"23","hashOfConfig":"16"},{"size":3185,"mtime":1626978000913,"results":"24","hashOfConfig":"16"},{"size":4436,"mtime":1626978997844,"results":"25","hashOfConfig":"16"},{"size":5633,"mtime":1596718526000,"results":"26","hashOfConfig":"16"},{"size":1595,"mtime":1596711962000,"results":"27","hashOfConfig":"16"},{"size":4032,"mtime":1626961847184,"results":"28","hashOfConfig":"16"},{"size":4585,"mtime":1597323850000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"fb7ki6",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\CopyTodo\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["62","63","64","65","66","67"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","H:\\CopyTodo\\src\\app\\App.tsx",["68"],"H:\\CopyTodo\\src\\app\\app-reducer.ts",[],"H:\\CopyTodo\\src\\index.tsx",["69"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './app/App';\nimport {Provider} from 'react-redux';\nimport {store} from './app/store';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            {/*<BrowserRouter>*/}\n            <HashRouter>\n                <App/>\n            </HashRouter>\n            {/*</BrowserRouter>*/}\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["70","71"],"H:\\CopyTodo\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["72","73","74"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","H:\\CopyTodo\\src\\utils\\error-utils.ts",["75"],"H:\\CopyTodo\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"H:\\CopyTodo\\src\\features\\Login\\auth-reducer.ts",[],"H:\\CopyTodo\\src\\api\\todolists-api.ts",[],"H:\\CopyTodo\\src\\features\\Login\\Login.tsx",["76"],"H:\\CopyTodo\\src\\features\\TodolistsList\\tasks-reducer.ts",["77","78"],"H:\\CopyTodo\\src\\components\\AddItemForm\\AddItemForm.tsx",["79","80","81"],"H:\\CopyTodo\\src\\features\\TodolistsList\\TodolistsList.tsx",["82","83","84","85","86","87","88","89"],"H:\\CopyTodo\\src\\features\\TodolistsList\\todolists-reducer.ts",["90"],{"ruleId":"91","severity":1,"message":"92","line":35,"column":8,"nodeType":"93","endLine":35,"endColumn":10,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":39,"column":8,"nodeType":"93","endLine":39,"endColumn":42,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"95","line":46,"column":8,"nodeType":"93","endLine":46,"endColumn":54,"suggestions":"97"},{"ruleId":"91","severity":1,"message":"95","line":48,"column":95,"nodeType":"93","endLine":48,"endColumn":134,"suggestions":"98"},{"ruleId":"91","severity":1,"message":"95","line":49,"column":101,"nodeType":"93","endLine":49,"endColumn":140,"suggestions":"99"},{"ruleId":"91","severity":1,"message":"95","line":50,"column":107,"nodeType":"93","endLine":50,"endColumn":146,"suggestions":"100"},{"ruleId":"91","severity":1,"message":"101","line":29,"column":8,"nodeType":"93","endLine":29,"endColumn":10,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":8,"column":9,"nodeType":"105","messageId":"106","endLine":8,"endColumn":22},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"91","severity":1,"message":"95","line":15,"column":97,"nodeType":"93","endLine":15,"endColumn":130,"suggestions":"111"},{"ruleId":"91","severity":1,"message":"95","line":20,"column":8,"nodeType":"93","endLine":20,"endColumn":41,"suggestions":"112"},{"ruleId":"91","severity":1,"message":"95","line":24,"column":8,"nodeType":"93","endLine":24,"endColumn":41,"suggestions":"113"},{"ruleId":"103","severity":1,"message":"114","line":19,"column":6,"nodeType":"105","messageId":"106","endLine":19,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":62,"column":28,"nodeType":"117","endLine":62,"endColumn":45},{"ruleId":"103","severity":1,"message":"118","line":5,"column":9,"nodeType":"105","messageId":"106","endLine":5,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":13,"column":94,"nodeType":"121","messageId":"122","endLine":13,"endColumn":96},{"ruleId":"103","severity":1,"message":"123","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":12},{"ruleId":"103","severity":1,"message":"124","line":2,"column":14,"nodeType":"105","messageId":"106","endLine":2,"endColumn":20},{"ruleId":"103","severity":1,"message":"125","line":2,"column":22,"nodeType":"105","messageId":"106","endLine":2,"endColumn":33},{"ruleId":"91","severity":1,"message":"126","line":37,"column":8,"nodeType":"93","endLine":37,"endColumn":10,"suggestions":"127"},{"ruleId":"91","severity":1,"message":"128","line":42,"column":8,"nodeType":"93","endLine":42,"endColumn":10,"suggestions":"129"},{"ruleId":"91","severity":1,"message":"128","line":47,"column":8,"nodeType":"93","endLine":47,"endColumn":10,"suggestions":"130"},{"ruleId":"91","severity":1,"message":"128","line":52,"column":8,"nodeType":"93","endLine":52,"endColumn":10,"suggestions":"131"},{"ruleId":"91","severity":1,"message":"128","line":57,"column":8,"nodeType":"93","endLine":57,"endColumn":10,"suggestions":"132"},{"ruleId":"91","severity":1,"message":"128","line":62,"column":8,"nodeType":"93","endLine":62,"endColumn":10,"suggestions":"133"},{"ruleId":"91","severity":1,"message":"128","line":67,"column":8,"nodeType":"93","endLine":67,"endColumn":10,"suggestions":"134"},{"ruleId":"91","severity":1,"message":"128","line":72,"column":8,"nodeType":"93","endLine":72,"endColumn":10,"suggestions":"135"},{"ruleId":"119","severity":1,"message":"120","line":10,"column":45,"nodeType":"121","messageId":"122","endLine":10,"endColumn":47},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.","ArrayExpression",["136"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["137"],["138"],["139"],["140"],["141"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["142"],"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],["145"],["146"],["147"],"'ErrorUtilsDispatchType' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'setAppErrorAC' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["148"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["149"],["150"],["151"],["152"],["153"],["154"],["155"],{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},{"desc":"158","fix":"161"},{"desc":"158","fix":"162"},{"desc":"158","fix":"163"},{"desc":"164","fix":"165"},"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"166"},{"desc":"158","fix":"167"},{"desc":"158","fix":"168"},{"desc":"169","fix":"170"},{"desc":"164","fix":"171"},{"desc":"164","fix":"172"},{"desc":"164","fix":"173"},{"desc":"164","fix":"174"},{"desc":"164","fix":"175"},{"desc":"164","fix":"176"},{"desc":"164","fix":"177"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"178","text":"179"},"Update the dependencies array to be: [props]",{"range":"180","text":"181"},{"range":"182","text":"181"},{"range":"183","text":"181"},{"range":"184","text":"181"},{"range":"185","text":"181"},"Update the dependencies array to be: [dispatch]",{"range":"186","text":"187"},{"range":"188","text":"181"},{"range":"189","text":"181"},{"range":"190","text":"181"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"191","text":"192"},{"range":"193","text":"187"},{"range":"194","text":"187"},{"range":"195","text":"187"},{"range":"196","text":"187"},{"range":"197","text":"187"},{"range":"198","text":"187"},{"range":"199","text":"187"},[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320],[1243,1245],"[dispatch]",[765,798],[1071,1104],[1261,1294],[1328,1330],"[demo, dispatch, isLoggedIn]",[1499,1501],[1670,1672],[1875,1877],[2088,2090],[2289,2291],[2436,2438],[2615,2617]]